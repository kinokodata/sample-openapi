openapi: 3.0.0
info:
  title: シンプルなユーザー管理API
  description: ユーザー情報を管理するためのシンプルなAPI
  version: 1.0.0

servers:
  - url: http://localhost:23000
    description: 開発用サーバー

paths:
  /:
    get:
      summary: ウェルカムメッセージの取得
      description: APIのウェルカムメッセージを返します
      responses:
        '200':
          description: 正常にメッセージを取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WelcomeResponse'

  /users:
    get:
      summary: ユーザー一覧の取得
      description: 登録されている全ユーザーの一覧を返します
      responses:
        '200':
          description: 正常にユーザー一覧を取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'

    post:
      summary: 新規ユーザーの作成
      description: 新しいユーザーを登録します
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      responses:
        '201':
          description: ユーザーの作成が成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreatedResponse'
        '400':
          description: 不正なリクエストデータ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/{id}:
    get:
      summary: 特定のユーザーの取得
      description: 指定されたIDのユーザー情報を取得します
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ユーザーID
      responses:
        '200':
          description: ユーザーの取得が成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: 指定されたユーザーが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          description: ユーザーID
        name:
          type: string
          description: ユーザーの名前

    UserCreateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: 登録するユーザーの名前

    WelcomeResponse:
      type: object
      properties:
        message:
          type: string
          example: "Hello, Node.js!"

    UsersResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'

    UserResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'

    UserCreatedResponse:
      type: object
      properties:
        message:
          type: string
          example: "ユーザーの作成が完了しました"
        data:
          $ref: '#/components/schemas/User'

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: エラーメッセージ